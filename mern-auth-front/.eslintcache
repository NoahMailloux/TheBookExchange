[{"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\index.js":"1","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\App.js":"2","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\context\\UserContext.js":"3","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\layout\\Header.js":"4","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\pages\\Home.js":"5","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\Login.js":"6","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\Register.js":"7","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\AuthOptions.js":"8","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\misc\\ErrorNotice.js":"9"},{"size":242,"mtime":1610910549952,"results":"10","hashOfConfig":"11"},{"size":1959,"mtime":1612571158189,"results":"12","hashOfConfig":"11"},{"size":186,"mtime":1610910549951,"results":"13","hashOfConfig":"11"},{"size":411,"mtime":1612393311712,"results":"14","hashOfConfig":"11"},{"size":2292,"mtime":1612571438744,"results":"15","hashOfConfig":"11"},{"size":3341,"mtime":1612569761810,"results":"16","hashOfConfig":"11"},{"size":5136,"mtime":1612569761818,"results":"17","hashOfConfig":"11"},{"size":1004,"mtime":1610910549948,"results":"18","hashOfConfig":"11"},{"size":257,"mtime":1610910549950,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"sqpi46",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\index.js",[],["41","42"],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\App.js",["43"],"import React, {useState, useEffect} from 'react';\r\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport Header from './components/layout/Header';\r\nimport Home from './components/pages/Home';\r\nimport Login from './components/auth/Login';\r\nimport Register from './components/auth/Register';\r\nimport UserContext from \"./context/UserContext\";\r\n\r\nimport \"./style.css\";\r\n\r\nexport default function App() {\r\n    const [userData, setUserData] = useState({\r\n        token: undefined,\r\n        user: undefined,\r\n    });\r\n\r\n    useEffect(() => {\r\n        const checkedLoggedIn = async () =>{\r\n            let token = localStorage.getItem(\"auth-token\");\r\n            if(token === null){\r\n                localStorage.setItem(\"auth-token\", \"\");\r\n                token = \"\";\r\n            }\r\n\r\n            const tokenRes = await Axios.post(\r\n                \"http://localhost:5001/users/tokenIsValid\", \r\n                null, \r\n                { headers: {\"x-auth-token\": token } }\r\n            );\r\n            if (tokenRes.data){\r\n                const userRes = await Axios.get(\"http://localhost:5001/users/\",{\r\n                 headers: {\"x-auth-token\": token},\r\n                });\r\n                setUserData({\r\n                    token,\r\n                    user: userRes.data,\r\n                });\r\n            }\r\n        };\r\n        checkedLoggedIn();\r\n    }, []);\r\n\r\n    return (\r\n    <>\r\n        <BrowserRouter>\r\n            <UserContext.Provider value={{ userData, setUserData }}>\r\n              \r\n                <div className=\"container\">\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/login\" component={Login} />\r\n                    <Route path=\"/register\" component={Register} />\r\n                </Switch>\r\n                </div>\r\n            </UserContext.Provider>\r\n        </BrowserRouter>\r\n    \r\n    </>\r\n    );\r\n    \r\n}\r\n\r\n\r\n\r\n","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\context\\UserContext.js",[],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\layout\\Header.js",[],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\pages\\Home.js",[],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\Login.js",[],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\Register.js",["44","45"],"import React, {useState, useContext} from 'react';\r\nimport {useHistory} from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport Axios from \"axios\";\r\nimport ErrorNotice from \"../misc/ErrorNotice\";\r\n\r\n\r\nexport default function Register() {\r\n    const [email, setEmail] = useState();\r\n    const [password, setPassword] = useState();\r\n    const [passwordCheck, setPasswordCheck] = useState();\r\n    const [displayName, setDisplayName] = useState();\r\n    const [address, setAddress] = useState();\r\n    const [error, setError] = useState();\r\n\r\n    const {setUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const submit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const newUser = {email, password, passwordCheck, displayName};\r\n            await Axios.post(\r\n                \"http://localhost:5001/users/register\",\r\n                newUser\r\n            );\r\n            const loginRes = await Axios.post(\"http://localhost:5001/users/login\",{\r\n                email, \r\n                password,\r\n             });\r\n            setUserData({\r\n                token: loginRes.data.token,\r\n                user: loginRes.data.user,\r\n            });\r\n            localStorage.setItem(\"auth-token\", loginRes.data.token);\r\n            history.push(\"/\");\r\n        }\r\n        catch(err){\r\n            err.response.data.msg && setError(err.response.data.msg);\r\n        }\r\n\r\n    };\r\n\r\n    return(\r\n        <div className=\"page2\">\r\n            <div classname=\"loginPageContainer\">\r\n                {error && (\r\n                <ErrorNotice message={error} clearError={() => setError(undefined)} /> \r\n                )}\r\n                <div className=\"loginContainer\">\r\n                    <h2 className=\"loginT\">Sign Up</h2>\r\n                    <h4 className=\"loginP\">Lorem ipsum dolor \r\n                    sit amet, consectetur adipiscing elit. \r\n                    In nec nibh vitae...</h4>\r\n                    <form className=\"form2\" onSubmit={submit}>\r\n                        <input \r\n                        placeholder=\"Email\"\r\n                        id=\"register-email\" \r\n                        type =\"email\" \r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        />\r\n                        <input \r\n                        placeholder=\"Password\"\r\n                        id=\"register-password\" \r\n                        type =\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        />\r\n                        <input \r\n                        placeholder=\"Repeat Password\"\r\n                        type=\"password\" \r\n                        placeholder=\"Verify password\"\r\n                        onChange={(e) => setPasswordCheck(e.target.value)}\r\n                        />\r\n                        <input \r\n                        placeholder=\"Display Name\"\r\n                        id=\"register-display-name\" \r\n                        type =\"text\"\r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        />\r\n                        <input \r\n                        placeholder=\"Password\"\r\n                        id=\"register-address\" \r\n                        type =\"text\"\r\n                        onChange={(e) => setAddress(e.target.value)}\r\n                        />\r\n\r\n                        <input type =\"submit\" value=\"Register\"/>\r\n                    </form>\r\n                </div> \r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n \r\n/*\r\n        <div className=\"page\">\r\n            <h2>Register</h2>\r\n            {error && (\r\n            <ErrorNotice message={error} clearError={() => setError(undefined)} /> \r\n            )}\r\n            <form className=\"form\" onSubmit={submit}>\r\n                <label htmlFor=\"register-email\">Email</label>\r\n                <input \r\n                id=\"register-email\" \r\n                type =\"email\" \r\n                onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"register-password\">Password</label>\r\n                <input \r\n                id=\"register-password\" \r\n                type =\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"Verify password\"\r\n                onChange={(e) => setPasswordCheck(e.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"register-display-name\">Display Name</label>\r\n                <input \r\n                id=\"register-display-name\" \r\n                type =\"text\"\r\n                onChange={(e) => setDisplayName(e.target.value)}\r\n                />\r\n\r\n                <label htmlFor=\"register-address\">Address</label>\r\n                <input \r\n                id=\"register-address\" \r\n                type =\"text\"\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                />\r\n\r\n                <input type =\"submit\" value=\"Register\"/>\r\n            </form>\r\n        </div>\r\n*/ /* Original Register*/","C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\auth\\AuthOptions.js",[],"C:\\TheBookExchangeProject\\TheBookExchange\\mern-auth-front\\src\\components\\misc\\ErrorNotice.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":14},{"ruleId":"50","severity":1,"message":"54","line":13,"column":12,"nodeType":"52","messageId":"53","endLine":13,"endColumn":19},{"ruleId":"55","severity":1,"message":"56","line":71,"column":25,"nodeType":"57","endLine":71,"endColumn":54},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'address' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation"]